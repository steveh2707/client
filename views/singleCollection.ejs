<%- include('components/header') %>
<%- include('components/navbar') %>

<% 
let userOwner = sess_valid && user.user_id==data.user_id
%>

<form id="editForm" method="POST" action="/collections/reorder/<%= data.collection_id %>"> </form>
<form id="deleteForm" method="POST" action="/deletecollection/<%= data.collection_id %>"> </form>

<div class="modal fade" id="deleteCollectionModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="deleteCollectionModalLabel">Delete Collection</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this collection?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button class="btn btn-danger" type="submit" form="deleteForm">Delete</button>
      </div>
    </div>
  </div>
</div>

<div class="mycollectionheading">

  <div class="headingimagecontainer">
    <div class="cardimage">
      <img class="image" src=<%=(data.albums[0]) ? data.albums[0].cover_image_url : ""%>>
      <img class="image" src=<%=(data.albums[1]) ? data.albums[1].cover_image_url : ""%>>
    </div>
    <div class="cardimage">
      <img class="image" src=<%=(data.albums[2]) ? data.albums[2].cover_image_url : ""%>>
      <img class="image" src=<%=(data.albums[3]) ? data.albums[3].cover_image_url : ""%>>
    </div>
  </div>

  <div class="myheadingstext">
    <h1 class="redheart" style="text-align: right;">
      <form id="likeForm" method="POST" action="/like/<%= data.collection_id %>">
        <%= data.numLikes %>
        <button class="none" type="submit">
          <% if(data.liked) { %>
          <i class="bi bi-heart-fill"></i>
          <% } else { %>
          <i class="bi bi-heart"></i>
          <% } %>
        </button>
      </form>
    </h1>

    <h1><%= data.collection_name %></h1>
    <h4>Created by:
      <a class="link-none" href="/users/<%= data.user_id %>">
        <%= data.user_name %>
      </a>
    </h4>
    <% 
      let createdDateTime = new Date(data.collection_creation_date)
      let lastEditDateTime = new Date(data.collection_last_edit_date)
      var options = { weekday: 'short', year: '2-digit', month: 'long', day: 'numeric' };
      %>

    <h6>Created: <%= createdDateTime.toLocaleString("en-GB", options) %> </h6>
    <h6>Last edited: <%= lastEditDateTime.toLocaleString("en-GB", options) %></h6>
  </div>
</div>

<div class="input-group mb-3">
  <span class="input-group-text" id="basic-addon1">
    <i class="bi bi-search"></i>
  </span>
  <input type="text" class="form-control" id="albumSearch" onkeyup="searchTable()"
    placeholder="Filter by album name, artist, release year, record label or genre...">
  <% if (userOwner) { %>
  <button class="btn btn-success" type="submit" form="editForm">Save Order</button>
  <button class="btn btn-danger" type="button" data-bs-toggle="modal" data-bs-target="#deleteCollectionModal">
    Delete
  </button>
  <% } %>
</div>

<table class="table table-dark align-middle" id="albumTable">
  <thead>
    <tr>
      <th scope="col" class="text-center reorder-button">#</th>
      <th scope="col" class="text-center"></th>
      <th scope="col" class="reorder-button">
        <i class="bi bi-arrow-down-up"></i>
        Album Name
      </th>
      <th scope="col" class="reorder-button">
        <i class="bi bi-arrow-down-up"></i>
        Artist
      </th>
      <th scope="col" class="text-center reorder-button">
        <i class="bi bi-arrow-down-up"></i>
        Release Year
      </th>
      <th scope="col" class="text-center reorder-button">
        <i class="bi bi-arrow-down-up"></i>
        Record Label
      </th>
      <th scope="col" class="text-center reorder-button">
        <i class="bi bi-arrow-down-up"></i>
        Genre
      </th>
      <th scope="col" class="text-center">
      </th>
    </tr>
  </thead>

  <tbody>

    <% data.albums.forEach(album=> { %>

    <% if (userOwner) { %>
    <tr draggable='true' ondragstart='start()' ondragover='dragover()' ondragend="dragend()"
      style="cursor: all-scroll;">
      <% } else { %>
    <tr>
      <% } %>
      <th id="num" scope="row" class="text-center"><%= album.album_num %></th>

      <td class="imageholder">
        <a href="/albums/<%= album.album_id %>" draggable='false'>
          <img class="image" src=<%=album.cover_image_url %>>
        </a>
      </td>
      <td>
        <a class="link-none" href="/albums/<%= album.album_id %>" draggable='false'><%= album.album_name %></a>
      </td>
      <td>
        <% album.albumArtists.forEach(artist=> { %>
        <a class="link-none" href="/artists/<%= artist.artist_id %>" draggable='false'>
          <%= artist.artist_name %>
        </a>
        <% }) %>
      </td>
      <td class="text-center"><%= album.release_year %></td>
      <td class="text-center"><%= album.record_label_name %></td>
      <td class="text-center"><%= album.genre_name %></td>

      <%- include('components/albumTableDropdown', {album, userOwner, collectionID: data.collection_id}) %>

      <td id="formvalues">
        <input type="hidden" id="albumNumStart" name="albumNumStart" form="editForm" value=<%= album.album_num %>>
        <input type="hidden" id="albumNumEnd" name="albumNumEnd" form="editForm" value=<%= album.album_num %>>
        <input type="hidden" id="collectionAlbumID" name="collectionAlbumID" form="editForm"
          value=<%= album.collection_album_id%>>
      </td>
    </tr>

    <% }) %>

  </tbody>

</table>


<br>

<div class="light-text comments-section ">
  <h4>Comments</h4>

  <table class="table table-dark"">
    <tbody>
    <% if(sess_valid){ %>
      <tr>
        <th scope=" row" class="comment-img-width">
    <div class="user-circle"><%= user.user_name[0].toUpperCase() %></div>
    </th>
    <td>
      <form method="POST" id="addcomment" action="/addcomment/<%= data.collection_id %>">
        <div class="input-group mb-3">
          <input type="text" class="form-control" id="formGroupExampleInput2" name="commentMessage"
            placeholder="Add a comment...">
          <button class="btn btn-outline-primary" type="submit" id="button-addon2">Submit</button>
        </div>
      </form>
    </td>
    </tr>
    <% } else { %>
    <tr>
      <th scope="row" class="comment-img-width">
        <div class="user-circle">?</div>
      </th>
      <td>
        <div class="input-group mb-3">
          <input type="text" class="form-control dark-input" id="formGroupExampleInput2" name="commentMessageDis"
            placeholder="Please login to add a comment..." disabled>
        </div>
      </td>
    </tr>

    <% } %>

    <% data.comments.forEach(comment => { %>
    <tr>
      <th scope="row" class="comment-img-width">
        <div class="user-circle"><%= comment.user_name[0].toUpperCase() %></div>
      </th>
      <td>
        <div>
          <%= comment.user_name %>
          <% 
          let currentDateTime = new Date()
          let lastEditDateTime = new Date(comment.comment_date_time)

          let millisecs = currentDateTime.getTime()-lastEditDateTime.getTime()
          let days = Math.floor(millisecs/(1000*60*60*24))  
          %>
          <small style="color: rgb(158, 158, 158); font-size: small;"> <%=days%> days ago
          </small>
        </div>
        <div style="font-size: small;">
          <%= comment.comment_message %>
        </div>
      </td>
    </tr>
    <% }) %>
    </tbody>
  </table>


</div>




<%- include('components/footer') %>


<script>

  var row;

  function start() {
    row = event.target;
  }

  function dragover() {
    var e = event;
    e.preventDefault();

    let children = Array.from(e.target.parentNode.parentNode.children);
    if (children.indexOf(e.target.parentNode) > children.indexOf(row)) {
      e.target.parentNode.after(row);
    }
    else {
      e.target.parentNode.before(row);
    }
  }

  function dragend() {
    let array = [...event.target.parentNode.children]

    array.forEach(row => {
      let newRowIndex = row.rowIndex
      row.children[8].children[1].value = newRowIndex
    })

  }


  function searchTable() {
    // Declare variables
    let input, filter, table, tr, td, i, txtValue
    let searchVals = []
    input = document.getElementById("albumSearch");
    filter = input.value.toUpperCase();
    table = document.getElementById("albumTable");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
      tdAlbum = tr[i].getElementsByTagName("td")[1];
      tdArtist = tr[i].getElementsByTagName("td")[2];
      tdYear = tr[i].getElementsByTagName("td")[3];
      tdRecord = tr[i].getElementsByTagName("td")[4];
      tdGenre = tr[i].getElementsByTagName("td")[5];

      if (tdAlbum) {
        searchVals[0] = tdAlbum.innerText.toUpperCase().indexOf(filter)
        searchVals[1] = tdArtist.innerText.toUpperCase().indexOf(filter)
        searchVals[2] = tdYear.innerText.toUpperCase().indexOf(filter)
        searchVals[3] = tdRecord.innerText.toUpperCase().indexOf(filter)
        searchVals[4] = tdGenre.innerText.toUpperCase().indexOf(filter)

        if (searchVals.some(val => val > -1)) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }




  var getCellValue = function (tr, idx) { return tr.children[idx].innerText || tr.children[idx].textContent; }

  var comparer = function (idx, asc) {
    return function (a, b) {
      return function (v1, v2) {
        return v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2);
      }(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
    }
  };

  // do the work...
  Array.prototype.slice.call(
    document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
      const table = th.closest('table');
      const tbody = table.querySelector('tbody');
      Array.from(tbody.querySelectorAll('tr'))
        .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
        .forEach(tr => tbody.appendChild(tr))
    })))
  )



</script>